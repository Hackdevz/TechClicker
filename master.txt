Let's make a game!
// And run away!
	Name: Techlicker
	Desc: Power up your technologies!
	by:Regian (serious version)
	Version: Alpha
 
Settings
	background:http://www.powerpointhintergrund.com/uploads/network-hd-desktop-technology-wallpaper-background-28.jpeg
	building cost increase: 108%// Oh magic
	building cost refund: 66.6%// Devilry	
	spritesheet:cookie, 48 by 48, http://orteil.dashnet.org/cookieclicker/img/icons.png
	stylesheet:https://raw.githubusercontent.com/Hackdevz/Techlicker/master/style.txt
Buttons
	*click
		name:Write Code
		desc:Write code, get data and earn money! All in one super technological button 2000!
		on click:yield 1 data
		on click:yield 1 money
		class:bigButton hasFlares
		Icon:http://openclipart.org/image/250px/svg_to_png/159709/computer-laptop.png
		tooltip origin:bottom
		show clicks
		
Resources
	*data
		name:Byte|Bytes
		desc:Data.
		text:Your database contains [data] bytes
			
	*money
		name:Money
		desc:With this you can buy everything.
		start with:250
		text:You have [money] $.
	*xp
		name:XP
		start with:1
		text: You are level [xp]
	
	/* *computer
		name:Computers in your net
		desc:You can do everything with this.
		start with:1
		icon:http://icons.iconarchive.com/icons/oxygen-icons.org/oxygen/48/Devices-computer-icon.png
		tag:stat */

		
	*Sec
		name:Seconds played
		tag:stat
		
		
	*Min
		name:Minutes played
		tag:stat
		
	*bugsFix
		name:Bugs fixed
		tag:stat
Layout
	*main
  		contains:res, stat, buttons
  		*res
    			contains:Resources
    			class:fullWidth
  		*stat
   			contains:tag:stat
   			
  		*buttons
    			contains:Buttons
	*store
  		contains:buildings, upgrades
  		*buildings
    			contains:BulkDisplay, Buildings
    			header:Languages & Apps
    			tooltip origin:left
  		*upgrades
    			contains:Upgrades
    			header:Upgrade your systems
    			costs:hide
    			names:hide
    	
	
Buildings
	*test
		on tick:yield (1/60) Min
		on tick:yield 1 Sec
		always hidden	
		// try better next time
	
		
	*assembly
		name:Assembly language
		desc:The first official programming language.<//>Creates <b>5 data</b> every second.
		cost:350 money
		icon:https://i.imgur.com/LjJ9Yit.jpg
		on tick:yield 5 data
		on tick:yield 5 money
		passive:grant 0.005 xp
		
	*fortran
		name:Fortran language
		desc:A programming language for maths.<//>Creates <b>20 data</b> every seconds.
		cost:1600 money
		req:2 xp
		icon:https://i.imgur.com/aF8r96r.jpg
		on tick:yield 20 data
		on tick:yield 20 money
		passive:grant 0.005 xp
		
	*c
		name:C
		desc:<b>THE</b> programming language. With this you can create Windows. <//>Creates <b>150 data</b> every second.
		cost:8000 money
		req:cProg
		icon:https://i.imgur.com/6JvYppL.jpg
		on tick:yield 150 data
		on tick:yield 150 money
		passive:grant 0.005 xp
		
	*cpp
		name:C++
		desc:The advanced version of <b>THE</b> programming language. <//>Creates <b>600 data</b> every second.
		cost:75000 money
		req:ClassyC
		icon:https://i.imgur.com/o1WgmFz.jpg
		on tick:yield 600 data
		on tick:yield 600 money
		passive:grant 0.005 xp

Upgrades

	*fixBug
        name:Fix the bug
        desc:Fix a bug with <b>[money/10]</b> money. ( It works only 90% of the time)
        no buy
        on click:if (money>=(money/10)) yield -(money/10) money
        on click:
            if (money>=(money/10))
                if (chance(90%))
                    yield 1 bugsFix
		    yield (data/10) data
                    toast You fixed the bug!
                else
                    toast Bip bup, the bug is still there 
                end
            end
        end


	*ClassyC
		name:C with Classes
		desc:int main () { std::cout << " Hello! "; std::cout << " Power Up My C "; } <//> Unlocks the <b>C++ programming language.</b>
		passive:grant 0.1 xp
		icon:http://icons.iconarchive.com/icons/oxygen-icons.org/oxygen/48/Actions-address-book-new-icon.png
		req:7 xp
		req:10 c
		cost:2500000 money
		passive:multiply yield of click by 2
		
		
		
	*cProg
		name:The C Programming Language
		desc:include <stdio.h>, int main { printf("Let's begin") } return 0; <//> Unlocks the <b>C programming language.</b>
		passive:grant 0.1 xp
		icon:http://icons.iconarchive.com/icons/pc-unleashed/unleashed/48/books-icon.png
		req:5 xp
		cost:300000 money
		passive:multiply yield of click by 2
	
	*perfect
		name:Perfect coding
		desc:Your code works better and every line of code now is <b>2 bytes.</b>. Icon by sportsbettingspot.com
		passive:multiply yield of click by 2
		passive:grant 0.66 xp
		icon:http://icons.iconarchive.com/icons/sportsbettingspot/summer-olympics/48/archery-icon.png
		req:256 data
		cost:512 money
		//sportsbettingspot.com
		//Copyright, sir
		
	*perfectII
		name:Faster coding
		desc:Your PC is faster and every line of code now is <b>4 bytes.</b>.
		passive:multiply yield of click by 2
		passive:grant 0.66 xp
		icon:http://icons.iconarchive.com/icons/paomedia/small-n-flat/48/lightning-icon.png
		req:512 data
		cost:1024 money
		//Powers Of Two
	
	*assemblyI
		name:Assembler 2.0
		desc:Your assembler works <b>80% faster</b>. Tier: Plain
		passive:multiply yield of assembly by 1.8
		passive:grant 0.5 xp
		icon:cookie[4,0]
		req:360 data
		req:2 assembly
		cost:4000 money
		
	*assemblyII
		name:Assembler 3.0
		desc:Your assembler works <b>90% faster</b>.  Tier: Rose
		passive:multiply yield of assembly by 1.9
		passive:grant 0.33 xp
		icon:cookie[4,1]
		req:36000 data
		req:10 assembly
		cost:400000 money
		
	*assemblyIII
		name:Assembler 4.0
		desc:Your assembler works <b>100% faster</b>.   Tier: Azure
		passive:multiply yield of assembly by 2
		passive:grant 0.25 xp
		icon:cookie[4,2]
		req:3600000 data
		req:25 assembly
		cost:40000000 money
	
	*assemblyIV
		name:Assembler 5.0
		desc:Your assembler works <b>100% faster</b>.   Tier: Goldy
		passive:multiply yield of assembly by 2
		passive:grant 0.2 xp
		icon:cookie[4,13]
		req:360000000 data
		req:50 assembly
		cost:4000000000 money
		
	
	*assemblyV
		name:Assembler 6.0
		desc:Your assembler works <b>100% faster</b>.   Tier: Special
		passive:multiply yield of assembly by 2
		passive:grant 0.12 xp
		icon:cookie[4,14]
		req:36000000000 data
		req:100 assembly
		cost:400000000000 money
	*assemblyVI
		name:Assembler 7.0
		desc:Your assembler works <b>100% faster</b>.   Tier: Metal
		passive:multiply yield of assembly by 2
		passive:grant 0.12 xp
		icon:cookie[4,15]
		req:3600000000000 data
		req:150 assembly
		cost:400000000000000 money
		
	*assemblyVII
		name:Assembler 8.0
		desc:Your assembler works <b>100% faster</b>.   Tier: Minty
		passive:multiply yield of assembly by 2
		passive:grant 0.07 xp
		icon:cookie[4,16]
		req:3600000000000000 data
		req:200 assembly
		cost:400000000000000000 money
		
	*assemblyVIII
		name:Assembler 9.0
		desc:Your assembler works <b>100% faster</b>.   Tier: Platinum
		passive:multiply yield of assembly by 2
		passive:grant 0.07 xp
		icon:cookie[4,17]
		req:225 assembly
		cost:4e19 money
				
	*assemblyIX
		name:Assembler X
		desc:Your assembler works <b>100% faster</b>.   Tier: Green
		passive:multiply yield of assembly by 2
		passive:grant 0.07 xp
		icon:cookie[4,18]
		req:250 assembly
		cost:4e22 money
		
	*assemblyX
		name: The Ultimate Assembly
		desc:Your assembler works <b>100% faster</b>.   Tier: Final
		passive:multiply yield of assembly by 2
		passive:grant 0.07 xp
		icon:cookie[4,19]
		req:300 assembly
		cost:4e25 money
		
		
// Fortran
	
	*fortranI
		name:Fortran 38
		desc:Your fortran works <b>80% faster</b>. Tier: Plain
		passive:multiply yield of fortran by 1.8
		passive:grant 0.66 xp
		icon:cookie[4,0]
		req:360 data
		req:2 fortran
		cost:10000 money
		
	*fortranII
		name:Fortran 44
		desc:Your fortran works <b>90% faster</b>.  Tier: Rose
		passive:multiply yield of fortran by 1.9
		passive:grant 0.5 xp
		icon:cookie[4,1]
		req:36000 data
		req:10 fortran
		cost:1000000 money
		
	*fortranIII
		name:Fortran 55
		desc:Your fortran works <b>100% faster</b>.   Tier: Azure
		passive:multiply yield of fortran by 2
		passive:grant 0.25 xp
		icon:cookie[4,2]
		req:3600000 data
		req:25 fortran
		cost:1e9 money
	
	*fortranIV
		name:Fortran 66
		desc:Your fortran works <b>100% faster</b>.   Tier: Goldy
		passive:multiply yield of fortran by 2
		passive:grant 0.2 xp
		icon:cookie[4,13]
		req:360000000 data
		req:50 fortran
		cost:1e11 money
		
	
	*fortranV
		name:Fortran 77
		desc:Your fortran works <b>100% faster</b>.   Tier: Special
		passive:multiply yield of fortran by 2
		passive:grant 0.12 xp
		icon:cookie[4,14]
		req:36000000000 data
		req:100 fortran
		cost:1e13 money
	*fortranVI
		name:Fortran 88
		desc:Your fortran works <b>100% faster</b>.   Tier: Metal
		passive:multiply yield of fortran by 2
		passive:grant 0.12 xp
		icon:cookie[4,15]
		req:3600000000000 data
		req:150 fortran
		cost:1e15 money
		
	*fortranVII
		name:Fortran 99
		desc:Your fortran works <b>100% faster</b>.   Tier: Minty
		passive:multiply yield of fortran by 2
		passive:grant 0.07 xp
		icon:cookie[4,16]
		req:3600000000000000 data
		req:200 fortran
		cost:1e17 money
		
	*fortranVIII
		name:Fortran 111
		desc:Your fortran works <b>100% faster</b>.   Tier: Platinum
		passive:multiply yield of fortran by 2
		passive:grant 0.07 xp
		icon:cookie[4,17]
		req:225 fortran
		cost:1e20 money
				
	*fortranIX
		name:Fortran X
		desc:Your fortran works <b>100% faster</b>.   Tier: Green
		passive:multiply yield of fortran by 2
		passive:grant 0.07 xp
		icon:cookie[4,18]
		req:250 fortran
		cost:1e23 money
		
	*fortranX
		name: The Ultimate Fortran
		desc:Your fortran works <b>100% faster</b>.   Tier: Final
		passive:multiply yield of fortran by 2
		passive:grant 0.07 xp
		icon:cookie[4,19]
		req:300 fortran
		cost:1e26 money
		
	*C1
		name:Ansi C
		desc:An advanced C compilator. Works twice as fast.  Tier: ANSI
		icon:https://i.imgur.com/6JvYppL.jpg
		passive:multiply yield of c by 2
		passive:grant 0.05 xp
		req:2 c
		cost:300000 money
		
	*C2
		name:GCC
		desc:A super advanced C compilator. Works thrice as fast.  Tier: ANSI+
		icon:https://i.imgur.com/6JvYppL.jpg
		passive:multiply yield of c by 3
		passive:grant 0.05 xp
		req:10 c
		cost:3e7 money
		
	*C3
		name:TCC
		desc:An hyper-advanced C compilator. Works fourice as fast.  Tier: ANSI++
		icon:https://i.imgur.com/6JvYppL.jpg
		passive:multiply yield of c by 4
		passive:grant 0.05 xp
		req:25 c
		cost:3e9 money
		
	*C4
		name:Atomic-C
		desc:An atomic C compilator. Works fivice as fast.  Tier: Atomic
		icon:https://i.imgur.com/6JvYppL.jpg
		passive:multiply yield of c by 5
		passive:grant 0.05 xp
		req:50 c
		cost:3e11 money
	
	*C5
		name:Revolver C
		desc:The newest C compilator. Works ten times as fast.  Tier: Revolver
		icon:https://i.imgur.com/6JvYppL.jpg
		passive:multiply yield of c by 10
		passive:grant 0.05 xp
		req:100 c
		cost:3.14159265e14 money
		//PI
		
	*C6
		name:Explosive-C (C4)
		desc:The BOOM C compilator. Works eleven times as fast.  Tier: Explosive
		icon:https://i.imgur.com/6JvYppL.jpg
		passive:multiply yield of c by 11
		passive:grant 0.05 xp
		req:150 c
		cost:3e17 money
		
	*C7
		name:Dark-C
		desc:The darkest C compilator. Works 20 times as fast.  Tier: Dark
		icon:https://i.imgur.com/6JvYppL.jpg
		passive:multiply yield of c by 20
		passive:grant 0.05 xp
		req:200 c
		cost:3e20 money
	
	*CX
		name:C-X
		desc:The C-est compilator.
		icon:https://i.imgur.com/6JvYppL.jpg
		passive:multiply yield of c by (c/2)
		passive:grant 0.05 xp
		req:1000000 data
		cost:1e8 money
		
	
		
		
	

	
		
